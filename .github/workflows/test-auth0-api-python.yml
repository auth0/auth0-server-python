name: Test auth0-api-python

on:
  push:
    branches:
      - feature/auth0-api-python
    paths:
      - 'packages/auth0_api_python/**'
  pull_request:
    branches:
      - main
    paths:
      - 'packages/auth0_api_python/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: packages/auth0_api_python/.venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      working-directory: ./packages/auth0_api_python
      run: poetry install --no-interaction --no-root
    
    - name: Install package
      working-directory: ./packages/auth0_api_python
      run: poetry install --no-interaction
    
    - name: Run tests with pytest
      working-directory: ./packages/auth0_api_python
      run: |
        poetry run pytest -v --cov=src --cov-report=term-missing --cov-report=xml

    - name: Run ruff linting
      working-directory: ./packages/auth0_api_python
      run: |
        poetry run ruff check .
